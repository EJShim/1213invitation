{"version":3,"sources":["resource/img/kivengerse.jpg","resource/img/kistlogo.ico","resource/img/slideshow/1.jpg","resource/img/slideshow/2.png","resource/img/slideshow/3.jpg","resource/img/slideshow/4.png","container/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Main","now","Date","then","gap","getTime","day","Math","abs","floor","className","style","backgroundImage","background","src","kistlogoIcon","alt","margin","width","href","Component","App","props","myIndex","this","carousel","i","x","document","getElementsByClassName","length","display","setTimeout","ref","title","height","frameBorder","border","allowFullScreen","maxWidth","slide1","slide2","slide3","slide4","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yGAAAA,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,8OCqC5BC,G,uLA3BP,IAAMC,EAAM,IAAIC,KACVC,EAAO,IAAID,KAAK,qBAChBE,EAAMH,EAAII,UAAYF,EAAKE,UAC3BC,EAAMC,KAAKC,IAAKD,KAAKE,MAAML,EAAG,QACpC,OACI,yBAAKM,UAAU,8DACXC,MAAO,CAACC,gBAAgB,gEAAiEC,IAAa,MACtG,yBAAKH,UAAU,iDACX,yBAAKA,UAAU,OAAOI,IAAKC,IAAcC,IAAI,UAGjD,yBAAKN,UAAU,qBACX,wBAAIA,UAAU,2BAAd,gBACA,wBAAIA,UAAU,iBAAiBC,MAAO,CAACM,OAAO,OAAOC,MAAM,SAC3D,uBAAGR,UAAU,uBAAb,kBACA,uBAAGA,UAAU,sBAAsBJ,EAAnC,eAGJ,yBAAKI,UAAU,0CAAf,cACe,uBAAGS,KAAK,4BAAR,gB,GAvBZC,c,oECiFJC,G,kBA5Eb,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KAEDC,QAAU,EAHC,E,iFAOhBC,KAAKC,a,iCAGK,IACNC,EADK,OAEHC,EAAIC,SAASC,uBAAuB,YAC1C,IAAKH,EAAI,EAAGA,EAAIC,EAAEG,OAAQJ,IACxBC,EAAED,GAAGf,MAAMoB,QAAU,OAEvBP,KAAKD,UACDC,KAAKD,QAAUI,EAAEG,SAASN,KAAKD,QAAU,GAC7CI,EAAEH,KAAKD,QAAQ,GAAGZ,MAAMoB,QAAU,QAClCC,YAAW,WAAK,EAAKP,aAAa,O,+BAQlC,OACE,yBAAKQ,IAAI,YAAYvB,UAAU,aAC7B,6BAASA,UAAU,QACjB,kBAAC,EAAD,OAEF,6BAASA,UAAU,YACjB,yBAAKA,UAAU,SACf,yBAAKA,UAAU,SACb,yBAAKA,UAAU,SACb,8CACA,0DAGF,uBAAGA,UAAU,oBAAb,qBACA,uBAAGA,UAAU,oBAAb,+BACA,uBAAGA,UAAU,oBAAb,qBACA,uBAAGA,UAAU,oBAAb,2BACA,uBAAGA,UAAU,oBAAb,6BACA,uBAAGA,UAAU,oBAAb,sEAKJ,6BAASA,UAAU,iBAEjB,yBAAKA,UAAU,YACX,sEAEJ,yBAAKA,UAAU,eACb,4BAAQwB,MAAM,WAAWpB,IAAI,6QAA6QI,MAAM,OAAOiB,OAAO,OAAOC,YAAY,IAAIzB,MAAO,CAAC0B,OAAO,GAAIC,gBAAgB,OAK5X,6BAAS5B,UAAU,aACjB,yBAAKA,UAAU,wBAAwBC,MAAO,CAAC4B,SAAS,SACtD,mHACA,yBAAK7B,UAAU,6BAA6BI,IAAK0B,MACjD,yBAAK9B,UAAU,6BAA6BI,IAAK2B,MACjD,yBAAK/B,UAAU,6BAA6BI,IAAK4B,MACjD,yBAAKhC,UAAU,6BAA6BI,IAAK6B,a,GArE3CvB,cCGEwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAStB,SAASuB,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnD,MAAK,SAAAoD,GACjCA,EAAaC,kB","file":"static/js/main.7b41dea6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kivengerse.af439b55.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kistlogo.d861e2bc.ico\";","module.exports = __webpack_public_path__ + \"static/media/1.b083fc64.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.91d04f60.png\";","module.exports = __webpack_public_path__ + \"static/media/3.661efbde.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.203b810f.png\";","import React, {Component} from 'react';\r\nimport background from '../resource/img/kivengerse.jpg';\r\nimport kistlogoIcon from '../resource/img/kistlogo.ico';\r\nimport './Main.css'\r\n\r\n\r\nclass Main extends Component{\r\n\r\n    render(){\r\n        //calculate d-day\r\n        const now = new Date();\r\n        const then = new Date(\"december 13, 2019\");\r\n        const gap = now.getTime() - then.getTime();\r\n        const day = Math.abs( Math.floor(gap / (1000 * 60 * 60 * 24)));\r\n        return(\r\n            <div className=\"bgimg w3-display-container w3-animate-opacity w3-text-white\" \r\n                style={{backgroundImage:'linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url('+ background + ')'}}>\r\n                <div className=\"w3-display-topleft w3-padding-large w3-xlarge\">\r\n                    <img className=\"logo\" src={kistlogoIcon} alt=\"logo\"></img>\r\n                </div>\r\n\r\n                <div className=\"w3-display-middle\">\r\n                    <h1 className=\"w3-jumbo w3-animate-top\"> COMING SOON</h1>\r\n                    <hr className=\"w3-border-grey\" style={{margin:\"auto\",width:40+'%'}}></hr>\r\n                    <p className=\"w3-medium w3-center\"> Dec 13, 2019 </p>\r\n                    <p className=\"w3-large w3-center\">{day} days left</p>\r\n                </div>\r\n\r\n                <div className=\"w3-display-bottomleft w3-padding-large\">\r\n                    Powered by <a href=\"https://ejshim.github.io\">EJShim</a>\r\n                </div>\r\n                </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default Main;","import React, {Component} from 'react';\r\nimport Main from './container/Main';\r\nimport slide1 from './resource/img/slideshow/1.jpg'\r\nimport slide2 from './resource/img/slideshow/2.png'\r\nimport slide3 from './resource/img/slideshow/3.jpg'\r\nimport slide4 from './resource/img/slideshow/4.png'\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.myIndex = 0;\r\n  }\r\n\r\n  componentDidMount(){        \r\n    this.carousel();\r\n  }\r\n\r\n  carousel() {\r\n    let i;\r\n    const x = document.getElementsByClassName(\"mySlides\");\r\n    for (i = 0; i < x.length; i++) {\r\n      x[i].style.display = \"none\";  \r\n    }\r\n    this.myIndex++;    \r\n    if (this.myIndex > x.length) {this.myIndex = 1}    \r\n    x[this.myIndex-1].style.display = \"block\";  \r\n    setTimeout(()=>{this.carousel()}, 9000);    \r\n  }\r\n\r\n  \r\n\r\n\r\n  render(){\r\n\r\n    return (\r\n      <div ref=\"container\" className=\"container\">\r\n        <section className=\"main\">\r\n          <Main/>\r\n        </section>        \r\n        <section className=\"starwars\">\r\n          <div className=\"fade\"/>\r\n          <div className=\"crawl\">\r\n            <div className=\"title\">\r\n              <p>KIST Homecoming</p>\r\n              <h1>Friday the 13th, December</h1>\r\n            </div>\r\n\r\n            <p className=\"starwarseContent\">Date : 2019.12.13</p>\r\n            <p className=\"starwarseContent\">Time : 7:00 p.m - 5:00 a.m.</p>\r\n            <p className=\"starwarseContent\">Where : SOUL SOUP</p>\r\n            <p className=\"starwarseContent\">Dress Code : Movie Star</p>\r\n            <p className=\"starwarseContent\">Entrance fee : 35,000 won</p>\r\n            <p className=\"starwarseContent\">*각자 마실 음료 가져오기</p>\r\n\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"map-container\">\r\n          \r\n          <div className=\"map-text\">\r\n              <p>장소 안내 영상</p>\r\n          </div>\r\n          <div className=\"map-content\">\r\n            <iframe title=\"location\" src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3695.1957656052987!2d127.05614041254037!3d37.58824303692843!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x357cbb6c7c8d3245%3A0x6d91e4dd74c9688d!2z7IaM7Jq47Iiy!5e0!3m2!1sko!2sgm!4v1573040435588!5m2!1sko!2sgm\" width=\"100%\" height=\"100%\" frameBorder=\"0\" style={{border:0}} allowFullScreen=\"\"/>\r\n          </div>          \r\n        </section>\r\n\r\n        \r\n        <section className=\"slideshow\">\r\n          <div className=\"w3-content w3-section\" style={{maxWidth:\"100%\"}}>\r\n            <p>The w3-animate-fading class animates an element in and out (takes about 10 seconds).</p>\r\n            <img className=\"mySlides w3-animate-fading\" src={slide1} />\r\n            <img className=\"mySlides w3-animate-fading\" src={slide2} />\r\n            <img className=\"mySlides w3-animate-fading\" src={slide3} />\r\n            <img className=\"mySlides w3-animate-fading\" src={slide4} />      \r\n          </div>\r\n        </section>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}